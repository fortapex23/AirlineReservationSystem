@using TravelProgram.MVC.PaginatedLists
@using TravelProgram.MVC.ViewModels.SeatVM
@model PaginatedList<SeatGetVM>

@{
	int count = 0;
}

<div style="margin-left: 280px" class="main-panel">
	<div class="content-wrapper">
		<div class="row">
			<div class="col-lg-12 grid-margin stretch-card">
				<div class="card">
					<div class="card-body">
						<h4 class="card-title">Seat Table</h4>
						<a asp-action="create" class="btn btn-success">Create</a>
						<div asp-validation-summary="ModelOnly" style="text-danger"></div>
						<div class="table-responsive">
							<table class="table table-striped">
								<thead>
									<tr>
										<th>
											No
										</th>
										<th>
											Plane
										</th>
										<th>
											Flight
										</th>
										<th>
											Seat
										</th>
										<th>
											SeatClass
										</th>
										<th>
											Price
										</th>
										<th>
											IsAvailable
										</th>
										<th>
											Actions
										</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var seat in Model)
									{
										count++;
										<tr>
											<td>
												@count
											</td>
											<td>
												@seat.PlaneName
											</td>
											<td>
												@seat.FlightNumber
											</td>
											<td>
												@seat.SeatNumber
											</td>
											<td>
												@seat.ClassType
											</td>
											<td>
												@seat.Price
											</td>
											<td>
												@seat.IsAvailable
											</td>
											<td>
												<a asp-action="Update" asp-route-id="@seat.Id" class="btn btn-primary">edit</a>
												<a asp-action="Delete" asp-route-id="@seat.Id" class="btn btn-danger">remove</a>
											</td>
										</tr>
									}
								</tbody>
							</table>

							<div style="display: @(Model.TotalPage == 0 ? "none" : "flex"); justify-content: center">
								<nav aria-label="...">
									<ul class="pagination">
										<li class="page-item @(Model.Prev == false ? "disabled" : "")">
											<a class="page-link" asp-action="index" asp-route-page="@(Model.ActivePage - 1)">Previous</a>
										</li>
										@for (int i = 1; i <= Model.TotalPage; i++)
										{
											<li class="page-item @(Model.ActivePage == i ? "active" : "")"><a class="page-link" asp-action="index" asp-route-page="@i">@i</a></li>
										}
										<li class="page-item @(Model.Next == false ? "disabled" : "")">
											<a class="page-link" asp-action="index" asp-route-page="@(Model.ActivePage + 1)">Next</a>
										</li>
									</ul>
								</nav>
							</div>

						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
